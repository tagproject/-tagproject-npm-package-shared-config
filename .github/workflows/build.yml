name: Build

on: [push, pull_request]

jobs:
  matrix:
    name: Configure matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create matrix config
        id: set-matrix
        uses: actions/setup-node@v2
        run: |
          echo node -v
          echo npm -v
          npm i semver
          CONFIG=$(node .github/config.js)
          echo "::set-output name=matrix::$CONFIG"

      #- uses: actions/checkout@v2
      #- id: set-matrix
      #  run: |
      #    ENGINES=$(jq '.engines | .node' ./package.json)
      #    CONFIG=$(echo $(cat .github/matrix.json) | sed 's/ //g' )
      #    echo "::set-output name=matrix::$CONFIG"

  build:
    name: Build
    needs: [ matrix ]
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install Dependencies
      run: npm ci

    - name: Build
      run: npm run build

  status:
    name: Success build
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - id: status
        name: Load failure jobs count
        env:
          URL: https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs
          USER: admin:${{ secrets.GITHUB_TOKEN }}
          FILTER: "[.jobs[] | select(.status==\"completed\" and .conclusion==\"failure\") | { status: .conclusion, matrix: .name}] | length"
        run: |
          failure_count=$(curl -X GET -s -u $USER $URL | jq "$FILTER")
          echo "::set-output name=failure_count::$failure_count"
          echo Failure jobs count: $failure_count

      - if: ${{ steps.status.outputs.failure_count > 0 }}
        name: Fail
        run: exit 1



